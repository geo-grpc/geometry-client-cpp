/*
Copyright 2017-2019 Echo Park Labs

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

For additional information, contact:

email: info@echoparklabs.io
*/

syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.epl.protobuf";
option java_outer_classname = "GeometryProto";
option objc_class_prefix = "GMPB";
option go_package = "github.com/geo-grpc/api/golang/epl/protobuf";

package epl.protobuf;

message GeometryData {
    int64 geometry_id = 1;
    string feature_id = 2;

    // oneof block
    string wkt = 3;
    string geojson = 4;
    bytes wkb = 5;
    bytes esri_shape = 6;
    // oneof block

    SpatialReferenceData sr = 7;

    EnvelopeData envelope = 8;

    /*
        type of geometry operators
    */
    enum Encoding {
        UNKNOWN_ENCODING = 0; // unknown type.
        WKB = 1; // well-known binary
        WKT = 2; // well-known text
        GEOJSON = 3; // geojson
        ESRI_SHAPE = 4; // esri shape binary
        ENVELOPE = 5;
    }
}

message SpatialReferenceData {
    // oneof block

    int32 wkid = 1;
    string proj4 = 2;
    string esri_wkt = 3;
    string ogc_wkt = 4;

    // oneof block
}


message EnvelopeData {
    double xmin = 1;
    double ymin = 2;
    double xmax = 3;
    double ymax = 4;
    SpatialReferenceData sr = 5;
}

message GeometryRequest {
    /*
        type of geometry operators
    */
    enum Operator {
        Project = 0; // project geometry from one spatial reference to another

        ExportToJson = 1; // deprecated
        ImportFromJson = 2; // deprecated
        ImportMapGeometryFromJson = 3; // deprecated

        ExportToESRIShape = 4; // export geometry to esrishape binary data
        ImportFromESRIShape = 5; // import from esrishape binary data

        Union = 6; // union two or more geometries
        Difference = 7; // difference of two or more geometries

        Proximity2D = 8; // not yet exposed

        Relate = 9; // not yet exposed 9 dim
        Equals = 10; // relational operator
        Disjoint = 11; // relational operator
        Intersects = 12; // relational operator
        Within = 13; // relational operator
        Contains = 14; // relational operator
        Crosses = 15; // relational operator
        Touches = 16; // relational operator
        Overlaps = 17; // relational operator

        Buffer = 18; // create polygon that is a buffer of the inputs
        Distance = 19; // not yet exposed
        Intersection = 20; // intersection of two or more geometries
        Clip = 21; // clip a geometry or geometries by a horizon
        Cut = 22; // cut geometry
        DensifyByLength = 23;
        // DensifyByAngle = 24;
        // LabelPoint = 25;

        GeodesicBuffer = 26;
        GeodeticDensifyByLength = 27;
        // ShapePreservingDensify = 28;
        GeodeticLength = 29;
        // GeodeticArea = 30;

        Simplify = 31;
        SimplifyOGC = 32;
        Offset = 33;
        Generalize = 34;
        GeneralizeByArea = 35;

        ExportToWkb = 36;
        ImportFromWkb = 37;
        ExportToWkt = 38;
        ImportFromWkt = 39;
        ImportFromGeoJson = 40;
        ExportToGeoJson = 41;
        SymmetricDifference = 42;
        ConvexHull = 43;
        Boundary = 44;
        RandomPoints = 45;
        EnclosingCircle = 46;
    }

    //    oneof primary_geoms {
    GeometryData geometry = 1;
    GeometryData left_geometry = 2;
    GeometryRequest geometry_request = 3;
    GeometryRequest left_geometry_request = 4;
    //    }

    GeometryData right_geometry = 5;
    GeometryRequest right_geometry_request = 6;
    //    }

    Operator operator = 7;

    GeometryData.Encoding result_encoding = 8;

    SpatialReferenceData operation_sr = 9;

    SpatialReferenceData result_sr = 10;

    message BufferParams {
        double distance = 1;
        double max_deviation = 2;
        bool union_result = 3;
        int32 max_vertices_in_full_circle = 4;
    }

    message GeodeticBufferParams {
        double distance = 1;
        double max_deviation = 2;
        bool union_result = 3;
        int32 max_vertices_in_full_circle = 4;
    }

    message ConvexParams {
        bool merge = 1;
    }

    message RelateParams {
        string de_9im = 1;
    }

    message RandomPointsParams {
        double points_per_square_km = 1;
        int64 seed = 2;
    }

    message GeneralizeParams {
        double max_deviation = 1;
        bool remove_degenerates = 2;
    }

    message GeneralizeByAreaParams {
        double percent_reduction = 1;
        bool remove_degenerates = 2;
        int32 max_point_count = 3;
    }

    message IntersectionParams {
        int32 dimension_mask = 1;
    }

    message OffsetParams {
        enum OffsetJoinType {
            Round = 0;
            Bevel = 1;
            Miter = 2;
            Square =3;
        }

        double distance = 1;
        OffsetJoinType join_type = 2;
        double bevel_ratio = 3;
        double flatten_error = 4;
    }

    message CutParams {
        bool consider_touch = 1;
    }

    message ClipParams {
        EnvelopeData envelope = 1;
    }

    message DensifyParams {
        double max_length = 1;
    }

    message SimplifyParams {
        bool force = 1;
    }
    //    oneof params {
    BufferParams buffer_params = 11;
    ConvexParams convex_params = 12;
    RelateParams relate_params = 13;
    RandomPointsParams random_points_params = 14;
    GeneralizeParams generalize_params = 15;
    IntersectionParams intersection_params = 16;
    OffsetParams offset_params = 17;
    CutParams cut_params = 18;
    ClipParams clip_params = 19;
    DensifyParams densify_params = 20;
    SimplifyParams simplify_params = 21;
    GeneralizeByAreaParams generalize_by_area_params = 22;
    //    }
}

message GeometryResponse {
    // oneof

    GeometryData geometry = 1;

    bool spatial_relationship = 2;

    double measure = 3;

    map<int64, bool> relate_map = 4;
    EnvelopeData envelope = 5;

    // oneof
}

message FileRequestChunk {
    enum FileType {
        Shapefile = 0;
    }

    GeometryRequest nested_request = 1;
    GeometryData.Encoding result_encoding_type = 2;

    SpatialReferenceData input_sr = 3;
    SpatialReferenceData result_sr = 5;

    bytes data = 6;
    int64 size = 7;
    int64 offset = 8;
    string file_name = 9;

    bool is_last_chunk = 10;
}
